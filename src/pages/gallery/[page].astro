---
import Layout from '../../layouts/Layout.astro';
import { getImagesInfo } from '../../utils/getImagesInfo';

// Generate static paths for each gallery page.
export async function getStaticPaths() {
  // Define rootDirectory inside getStaticPaths so it's available here.
  const rootDirectory = Astro.root ?? process.cwd();
  const { totalPages } = getImagesInfo(rootDirectory);
  return Array.from({ length: totalPages }, (_, i) => ({
    params: { page: String(i + 1) }
  }));
}

// In the main code, define rootDirectory again.
const rootDirectory = Astro.root ?? process.cwd();
const { files, perPage, totalPages } = getImagesInfo(rootDirectory);

// Retrieve the current page number from URL parameters.
const { page } = Astro.params;
const currentPage = parseInt(page, 10);

// Determine which images to show on this page.
const start = (currentPage - 1) * perPage;
const images = files.slice(start, start + perPage);
---

<Layout title={`Gallery - Page ${currentPage}`} activePage="gallery">
  <h1>My Photos - Page {currentPage}</h1>
  <p>Here is a collection of my images.</p>
  
  <div class="gallery-full">
    {images.map((image) => (
      <img src={`/images/${image}`} alt="Gallery image" loading="lazy" />
    ))}
  </div>
  
  <!-- Pagination Navigation -->
  <nav class="pagination">
    {currentPage > 1 && (
      <a href={`/gallery/${currentPage - 1}`}>&laquo; Previous</a>
    )}
    {Array.from({ length: totalPages }, (_, i) => {
      const pageNum = i + 1;
      return (
        <a
          href={`/gallery/${pageNum}`}
          class={pageNum === currentPage ? 'active' : ''}
        >
          {pageNum}
        </a>
      );
    })}
    {currentPage < totalPages && (
      <a href={`/gallery/${currentPage + 1}`}>Next &raquo;</a>
    )}
  </nav>
</Layout>
